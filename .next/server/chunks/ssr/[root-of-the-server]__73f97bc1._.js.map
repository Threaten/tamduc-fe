{"version":3,"sources":["turbopack:///[project]/node_modules/next/dist/src/server/instrumentation/utils.ts","turbopack:///[project]/node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js","turbopack:///[project]/node_modules/next/dist/esm/server/base-http/index.js","turbopack:///[project]/node_modules/next/dist/esm/server/api-utils/index.js","turbopack:///[project]/node_modules/next/dist/esm/server/base-http/node.js","turbopack:///[project]/node_modules/next/dist/esm/server/api-utils/get-cookie-parser.js","turbopack:///[project]/node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js","turbopack:///[project]/node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js","turbopack:///[project]/node_modules/next/dist/src/server/lib/cache-control.ts","turbopack:///[project]/app/components/hero-image.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/app/components/page-hero.tsx","turbopack:///[project]/lib/remote-images.ts","turbopack:///[project]/node_modules/uuid/dist/esm-node/native.js","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/validate/hasText.ts","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/converter/defaultConverters.ts","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/converter/converters/tab.tsx","turbopack:///[project]/node_modules/uuid/dist/esm-node/regex.js","turbopack:///[project]/node_modules/uuid/dist/esm-node/rng.js","turbopack:///[project]/node_modules/uuid/dist/esm-node/validate.js","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/Component/index.tsx","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/converter/converters/link.tsx","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/converter/converters/list.tsx","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/converter/converters/table.tsx","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/converter/converters/blockquote.tsx","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/converter/converters/horizontalRule.tsx","turbopack:///[project]/node_modules/uuid/dist/esm-node/stringify.js","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/converter/converters/heading.tsx","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/converter/converters/linebreak.tsx","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/converter/converters/text.tsx","turbopack:///[project]/node_modules/uuid/dist/esm-node/v4.js","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/converter/index.tsx","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/lexical/utils/nodeFormat.ts","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/converter/converters/upload.tsx","turbopack:///[project]/node_modules/@payloadcms/richtext-lexical/src/features/converters/lexicalToJSX/converter/converters/paragraph.tsx","turbopack:///[project]/app/helpers/RichTextRenderer.tsx","turbopack:///[project]/app/blogs/[slug]/page.tsx"],"sourcesContent":["export function getRevalidateReason(params: {\n  isOnDemandRevalidate?: boolean\n  isRevalidate?: boolean\n}): 'on-demand' | 'stale' | undefined {\n  if (params.isOnDemandRevalidate) {\n    return 'on-demand'\n  }\n  if (params.isRevalidate) {\n    return 'stale'\n  }\n  return undefined\n}\n","import { ReflectAdapter } from './reflect';\n/**\n * @internal\n */ export class ReadonlyHeadersError extends Error {\n    constructor(){\n        super('Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers');\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nexport class HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === 'undefined') return;\n                // If the original casing exists, return the value.\n                return ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === 'undefined') return false;\n                // If the original casing exists, return true.\n                return ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === 'undefined') return true;\n                // If the original casing exists, delete the property.\n                return ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'append':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(', ');\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === 'string') {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== 'undefined') return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== 'undefined';\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n\n//# sourceMappingURL=headers.js.map","import { RedirectStatusCode } from '../../client/components/redirect-status-code';\nimport { getCookieParser } from '../api-utils/get-cookie-parser';\nexport class BaseNextRequest {\n    constructor(method, url, body){\n        this.method = method;\n        this.url = url;\n        this.body = body;\n    }\n    // Utils implemented using the abstract methods above\n    get cookies() {\n        if (this._cookies) return this._cookies;\n        return this._cookies = getCookieParser(this.headers)();\n    }\n}\nexport class BaseNextResponse {\n    constructor(destination){\n        this.destination = destination;\n    }\n    // Utils implemented using the abstract methods above\n    redirect(destination, statusCode) {\n        this.setHeader('Location', destination);\n        this.statusCode = statusCode;\n        // Since IE11 doesn't support the 308 header add backwards\n        // compatibility using refresh header\n        if (statusCode === RedirectStatusCode.PermanentRedirect) {\n            this.setHeader('Refresh', `0;url=${destination}`);\n        }\n        return this;\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { PRERENDER_REVALIDATE_HEADER, PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER } from '../../lib/constants';\nimport { getTracer } from '../lib/trace/tracer';\nimport { NodeSpan } from '../lib/trace/constants';\nexport function wrapApiHandler(page, handler) {\n    return (...args)=>{\n        getTracer().setRootSpanAttribute('next.route', page);\n        // Call API route method\n        return getTracer().trace(NodeSpan.runHandler, {\n            spanName: `executing api route (pages) ${page}`\n        }, ()=>handler(...args));\n    };\n}\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */ export function sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */ export function redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === 'string') {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n        throw Object.defineProperty(new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`), \"__NEXT_ERROR_CODE\", {\n            value: \"E389\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nexport function checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nexport function clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = require('next/dist/compiled/cookie');\n    const previous = res.getHeader('Set-Cookie');\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === 'string' ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\n/**\n * Custom error class\n */ export class ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */ export function sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */ export function setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n}\n\n//# sourceMappingURL=index.js.map","import { SYMBOL_CLEARED_COOKIES } from '../api-utils';\nimport { NEXT_REQUEST_META } from '../request-meta';\nimport { BaseNextRequest, BaseNextResponse } from './index';\nlet prop;\nexport class NodeNextRequest extends BaseNextRequest {\n    static #_ = prop = _NEXT_REQUEST_META = NEXT_REQUEST_META;\n    constructor(_req){\n        var _this__req;\n        super(_req.method.toUpperCase(), _req.url, _req), this._req = _req, this.headers = this._req.headers, this.fetchMetrics = (_this__req = this._req) == null ? void 0 : _this__req.fetchMetrics, this[_NEXT_REQUEST_META] = this._req[NEXT_REQUEST_META] || {}, this.streaming = false;\n    }\n    get originalRequest() {\n        // Need to mimic these changes to the original req object for places where we use it:\n        // render.tsx, api/ssg requests\n        this._req[NEXT_REQUEST_META] = this[NEXT_REQUEST_META];\n        this._req.url = this.url;\n        this._req.cookies = this.cookies;\n        return this._req;\n    }\n    set originalRequest(value) {\n        this._req = value;\n    }\n    /**\n   * Returns the request body as a Web Readable Stream. The body here can only\n   * be read once as the body will start flowing as soon as the data handler\n   * is attached.\n   *\n   * @internal\n   */ stream() {\n        if (this.streaming) {\n            throw Object.defineProperty(new Error('Invariant: NodeNextRequest.stream() can only be called once'), \"__NEXT_ERROR_CODE\", {\n                value: \"E467\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this.streaming = true;\n        return new ReadableStream({\n            start: (controller)=>{\n                this._req.on('data', (chunk)=>{\n                    controller.enqueue(new Uint8Array(chunk));\n                });\n                this._req.on('end', ()=>{\n                    controller.close();\n                });\n                this._req.on('error', (err)=>{\n                    controller.error(err);\n                });\n            }\n        });\n    }\n}\nexport class NodeNextResponse extends BaseNextResponse {\n    get originalResponse() {\n        if (SYMBOL_CLEARED_COOKIES in this) {\n            this._res[SYMBOL_CLEARED_COOKIES] = this[SYMBOL_CLEARED_COOKIES];\n        }\n        return this._res;\n    }\n    constructor(_res){\n        super(_res), this._res = _res, this.textBody = undefined;\n    }\n    get sent() {\n        return this._res.finished || this._res.headersSent;\n    }\n    get statusCode() {\n        return this._res.statusCode;\n    }\n    set statusCode(value) {\n        this._res.statusCode = value;\n    }\n    get statusMessage() {\n        return this._res.statusMessage;\n    }\n    set statusMessage(value) {\n        this._res.statusMessage = value;\n    }\n    setHeader(name, value) {\n        this._res.setHeader(name, value);\n        return this;\n    }\n    removeHeader(name) {\n        this._res.removeHeader(name);\n        return this;\n    }\n    getHeaderValues(name) {\n        const values = this._res.getHeader(name);\n        if (values === undefined) return undefined;\n        return (Array.isArray(values) ? values : [\n            values\n        ]).map((value)=>value.toString());\n    }\n    hasHeader(name) {\n        return this._res.hasHeader(name);\n    }\n    getHeader(name) {\n        const values = this.getHeaderValues(name);\n        return Array.isArray(values) ? values.join(',') : undefined;\n    }\n    getHeaders() {\n        return this._res.getHeaders();\n    }\n    appendHeader(name, value) {\n        const currentValues = this.getHeaderValues(name) ?? [];\n        if (!currentValues.includes(value)) {\n            this._res.setHeader(name, [\n                ...currentValues,\n                value\n            ]);\n        }\n        return this;\n    }\n    body(value) {\n        this.textBody = value;\n        return this;\n    }\n    send() {\n        this._res.end(this.textBody);\n    }\n    onClose(callback) {\n        this.originalResponse.on('close', callback);\n    }\n}\nvar _NEXT_REQUEST_META;\n\n//# sourceMappingURL=node.js.map","/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */ export function getCookieParser(headers) {\n    return function parseCookie() {\n        const { cookie } = headers;\n        if (!cookie) {\n            return {};\n        }\n        const { parse: parseCookieFn } = require('next/dist/compiled/cookie');\n        return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie);\n    };\n}\n\n//# sourceMappingURL=get-cookie-parser.js.map","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash';\nimport { isGroupSegment } from '../../segment';\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ export function normalizeAppPath(route) {\n    return ensureLeadingSlash(route.split('/').reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if (isGroupSegment(segment)) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment[0] === '@') {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === 'page' || segment === 'route') && index === segments.length - 1) {\n            return pathname;\n        }\n        return pathname + \"/\" + segment;\n    }, ''));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ export function normalizeRscURL(url) {\n    return url.replace(/\\.rsc($|\\?)/, // $1 ensures `?` is preserved\n    '$1');\n}\n\n//# sourceMappingURL=app-paths.js.map","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */ export function ensureLeadingSlash(path) {\n    return path.startsWith('/') ? path : \"/\" + path;\n}\n\n//# sourceMappingURL=ensure-leading-slash.js.map","import { CACHE_ONE_YEAR } from '../../lib/constants'\n\n/**\n * The revalidate option used internally for pages. A value of `false` means\n * that the page should not be revalidated. A number means that the page\n * should be revalidated after the given number of seconds (this also includes\n * `1` which means to revalidate after 1 second). A value of `0` is not a valid\n * value for this option.\n */\nexport type Revalidate = number | false\n\nexport interface CacheControl {\n  revalidate: Revalidate\n  expire: number | undefined\n}\n\nexport function getCacheControlHeader({\n  revalidate,\n  expire,\n}: CacheControl): string {\n  const swrHeader =\n    typeof revalidate === 'number' &&\n    expire !== undefined &&\n    revalidate < expire\n      ? `, stale-while-revalidate=${expire - revalidate}`\n      : ''\n\n  if (revalidate === 0) {\n    return 'private, no-cache, no-store, max-age=0, must-revalidate'\n  } else if (typeof revalidate === 'number') {\n    return `s-maxage=${revalidate}${swrHeader}`\n  }\n\n  return `s-maxage=${CACHE_ONE_YEAR}${swrHeader}`\n}\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/hero-image.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/hero-image.tsx\",\n    \"default\",\n);\n","import HeroImage from \"./hero-image\";\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  imageSrc?: string;\n  imageAlt?: string;\n  imageAlign?: \"left\" | \"right\";\n  imageFallbackSrc?: string;\n  imageFallbackRemotes?: string[];\n};\n\nexport default function PageHero({\n  title,\n  subtitle,\n  imageSrc,\n  imageAlt,\n  imageAlign = \"right\",\n  imageFallbackSrc = \"/heroes/home.svg\",\n  imageFallbackRemotes,\n}: Props) {\n  const hasImage = Boolean(imageSrc);\n  return (\n    <section className=\"border-b border-black/10 dark:border-white/10\">\n      <div\n        className={`mx-auto max-w-6xl px-4 py-10 ${\n          hasImage ? \"grid md:grid-cols-2 items-center gap-8\" : \"\"\n        }`}\n      >\n        {hasImage && imageAlign === \"left\" ? (\n          <div className=\"order-0 md:order-none\">\n            <div className=\"relative aspect-[16/9] md:aspect-[4/3] rounded-xl border border-black/10 dark:border-white/10 overflow-hidden\">\n              {imageSrc ? (\n                <HeroImage\n                  src={imageSrc}\n                  fallbackSrc={imageFallbackSrc}\n                  fallbackRemotes={imageFallbackRemotes}\n                  alt={imageAlt ?? \"\"}\n                  className=\"object-contain\"\n                  priority\n                />\n              ) : null}\n            </div>\n          </div>\n        ) : null}\n\n        <div>\n          <h1 className=\"text-3xl font-semibold tracking-tight\">{title}</h1>\n          {subtitle ? (\n            <p className=\"mt-2 opacity-80 max-w-3xl\">{subtitle}</p>\n          ) : null}\n        </div>\n\n        {hasImage && imageAlign === \"right\" ? (\n          <div className=\"mt-6 md:mt-0\">\n            <div className=\"relative aspect-[16/9] md:aspect-[4/3] rounded-xl border border-black/10 dark:border-white/10 overflow-hidden\">\n              {imageSrc ? (\n                <HeroImage\n                  src={imageSrc}\n                  fallbackSrc={imageFallbackSrc}\n                  fallbackRemotes={imageFallbackRemotes}\n                  alt={imageAlt ?? \"\"}\n                  fill\n                  className=\"object-contain\"\n                  priority\n                />\n              ) : null}\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </section>\n  );\n}\n","// Centralized remote hospital-related images (Unsplash direct photo URLs).\n// You can swap these URLs anytime; fallbacks remain local SVGs.\n\nexport const HERO_REMOTE = {\n  home: \"https://images.unsplash.com/photo-1586773860414-9c5edc1f4a3f?auto=format&fit=crop&w=1600&q=80\",\n  about: \"https://images.unsplash.com/photo-1582719478250-c89cae4dc85b?auto=format&fit=crop&w=1600&q=80\",\n  services: \"https://images.unsplash.com/photo-1584982753584-7d2c42b02968?auto=format&fit=crop&w=1600&q=80\",\n  departments: \"https://images.unsplash.com/photo-1582719478461-905c673771fd?auto=format&fit=crop&w=1600&q=80\",\n  doctor: \"https://images.unsplash.com/photo-1550831107-1553da8c8464?auto=format&fit=crop&w=1200&q=80\",\n  blogs: \"https://images.unsplash.com/photo-1526256262350-7da7584cf5eb?auto=format&fit=crop&w=1600&q=80\",\n  gallery: \"https://images.unsplash.com/photo-1576765607924-b4f6d0fca32d?auto=format&fit=crop&w=1600&q=80\",\n  contact: \"https://images.unsplash.com/photo-1582719478250-95b89f3a9f3b?auto=format&fit=crop&w=1600&q=80\",\n  reservation: \"https://images.unsplash.com/photo-1512069772995-ecf6ff09495a?auto=format&fit=crop&w=1600&q=80\",\n  emergency: \"https://images.unsplash.com/photo-1576765978241-33ea48064440?auto=format&fit=crop&w=1600&q=80\",\n  faq: \"https://images.unsplash.com/photo-1580281657527-47e2d6fd1f3b?auto=format&fit=crop&w=1600&q=80\",\n} as const;\n\nexport const HERO_REMOTE_CANDIDATES: Record<keyof typeof HERO_REMOTE, string[]> = {\n  home: [\n    \"https://images.unsplash.com/photo-1586773860414-9c5edc1f4a3f?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1576765607924-b4f6d0fca32d?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1582719478461-905c673771fd?auto=format&fit=crop&w=1600&q=80\",\n  ],\n  about: [\n    \"https://images.unsplash.com/photo-1582719478250-c89cae4dc85b?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1526256262350-7da7584cf5eb?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1583912268181-52b068e3a2f3?auto=format&fit=crop&w=1600&q=80\",\n  ],\n  services: [\n    \"https://images.unsplash.com/photo-1584982753584-7d2c42b02968?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1512069772995-ecf6ff09495a?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1582719735998-2a636e7bf48e?auto=format&fit=crop&w=1600&q=80\",\n  ],\n  departments: [\n    \"https://images.unsplash.com/photo-1582719478461-905c673771fd?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1584982753584-7d2c42b02968?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1576765607924-b4f6d0fca32d?auto=format&fit=crop&w=1600&q=80\",\n  ],\n  doctor: [\n    \"https://images.unsplash.com/photo-1550831107-1553da8c8464?auto=format&fit=crop&w=1200&q=80\",\n    \"https://images.unsplash.com/photo-1576091160550-2173dba999ef?auto=format&fit=crop&w=1200&q=80\",\n    \"https://images.unsplash.com/photo-1527613426441-4da17471b66d?auto=format&fit=crop&w=1200&q=80\",\n  ],\n  blogs: [\n    \"https://images.unsplash.com/photo-1526256262350-7da7584cf5eb?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1583912268181-52b068e3a2f3?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1582719478250-c89cae4dc85b?auto=format&fit=crop&w=1600&q=80\",\n  ],\n  gallery: [\n    \"https://images.unsplash.com/photo-1576765607924-b4f6d0fca32d?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1582719478461-905c673771fd?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1512069772995-ecf6ff09495a?auto=format&fit=crop&w=1600&q=80\",\n  ],\n  contact: [\n    \"https://images.unsplash.com/photo-1582719478250-95b89f3a9f3b?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1512069772995-ecf6ff09495a?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1526256262350-7da7584cf5eb?auto=format&fit=crop&w=1600&q=80\",\n  ],\n  reservation: [\n    \"https://images.unsplash.com/photo-1512069772995-ecf6ff09495a?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1582719735998-2a636e7bf48e?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1583912268181-52b068e3a2f3?auto=format&fit=crop&w=1600&q=80\",\n  ],\n  emergency: [\n    \"https://images.unsplash.com/photo-1576765978241-33ea48064440?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1576765607924-b4f6d0fca32d?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1586773860414-9c5edc1f4a3f?auto=format&fit=crop&w=1600&q=80\",\n  ],\n  faq: [\n    \"https://images.unsplash.com/photo-1580281657527-47e2d6fd1f3b?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1526256262350-7da7584cf5eb?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1582719478250-c89cae4dc85b?auto=format&fit=crop&w=1600&q=80\",\n  ],\n};\n\nexport const DEPARTMENT_REMOTE: Record<string, string> = {\n  cardiology: \"https://images.unsplash.com/photo-1511174511562-5f7f18b874f8?auto=format&fit=crop&w=1600&q=80\", // ECG/monitor\n  pediatrics: \"https://images.unsplash.com/photo-1609204766980-0796d6a0e8b2?auto=format&fit=crop&w=1600&q=80\", // child patient\n  orthopedics: \"https://images.unsplash.com/photo-1582719478289-5e4a7f54c9a9?auto=format&fit=crop&w=1600&q=80\", // x-ray\n  dermatology: \"https://images.unsplash.com/photo-1582560475093-1f9f3f9137e9?auto=format&fit=crop&w=1600&q=80\", // skin consult\n  neurology: \"https://images.unsplash.com/photo-1581091012184-7c4c8b40a1d1?auto=format&fit=crop&w=1600&q=80\", // brain scan\n};\n\nexport const DEPARTMENT_REMOTE_CANDIDATES: Record<string, string[]> = {\n  cardiology: [\n    \"https://images.unsplash.com/photo-1511174511562-5f7f18b874f8?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1526256262350-7da7584cf5eb?auto=format&fit=crop&w=1600&q=80\",\n  ],\n  pediatrics: [\n    \"https://images.unsplash.com/photo-1609204766980-0796d6a0e8b2?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1583912268181-52b068e3a2f3?auto=format&fit=crop&w=1600&q=80\",\n  ],\n  orthopedics: [\n    \"https://images.unsplash.com/photo-1582719478289-5e4a7f54c9a9?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1582719735998-2a636e7bf48e?auto=format&fit=crop&w=1600&q=80\",\n  ],\n  dermatology: [\n    \"https://images.unsplash.com/photo-1582560475093-1f9f3f9137e9?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1580281657527-47e2d6fd1f3b?auto=format&fit=crop&w=1600&q=80\",\n  ],\n  neurology: [\n    \"https://images.unsplash.com/photo-1581091012184-7c4c8b40a1d1?auto=format&fit=crop&w=1600&q=80\",\n    \"https://images.unsplash.com/photo-1576765607924-b4f6d0fca32d?auto=format&fit=crop&w=1600&q=80\",\n  ],\n};\n\nexport const BLOG_REMOTE: Record<string, string> = {\n  \"healthy-heart-tips\": \"https://images.unsplash.com/photo-1510022079733-8b58aca7c4a8?auto=format&fit=crop&w=1600&q=80\",\n  \"child-vaccination-guide\": \"https://images.unsplash.com/photo-1583912268181-52b068e3a2f3?auto=format&fit=crop&w=1600&q=80\",\n  \"managing-chronic-pain\": \"https://images.unsplash.com/photo-1519494026892-80bbd2d6fd0d?auto=format&fit=crop&w=1600&q=80\",\n  \"understanding-high-cholesterol\": \"https://images.unsplash.com/photo-1582719478461-905c673771fd?auto=format&fit=crop&w=1600&q=80\",\n  \"flu-season-prep\": \"https://images.unsplash.com/photo-1584467735871-ec3abf7f1a8b?auto=format&fit=crop&w=1600&q=80\",\n  \"when-to-see-a-dermatologist\": \"https://images.unsplash.com/photo-1582560475093-1f9f3f9137e9?auto=format&fit=crop&w=1600&q=80\",\n};\n\nexport const BLOG_REMOTE_CANDIDATES: Record<string, string[]> = Object.fromEntries(\n  Object.entries(BLOG_REMOTE).map(([k, v]) => [k, [v, HERO_REMOTE.blogs, HERO_REMOTE.about]])\n) as Record<string, string[]>;\n\nexport const DOCTOR_REMOTE: Record<string, string> = {\n  \"linh-nguyen\": \"https://images.unsplash.com/photo-1550831107-1553da8c8464?auto=format&fit=crop&w=1200&q=80\",\n  \"minh-le\": \"https://images.unsplash.com/photo-1576091160550-2173dba999ef?auto=format&fit=crop&w=1200&q=80\",\n  \"thu-tran\": \"https://images.unsplash.com/photo-1527613426441-4da17471b66d?auto=format&fit=crop&w=1200&q=80\",\n  \"quang-phan\": \"https://images.unsplash.com/photo-1582719478250-95b89f3a9f3b?auto=format&fit=crop&w=1200&q=80\",\n  \"ly-hoang\": \"https://images.unsplash.com/photo-1584982753584-7d2c42b02968?auto=format&fit=crop&w=1200&q=80\",\n  \"an-vo\": \"https://images.unsplash.com/photo-1581091012184-7c4c8b40a1d1?auto=format&fit=crop&w=1200&q=80\",\n};\n\nexport const DOCTOR_REMOTE_CANDIDATES: Record<string, string[]> = Object.fromEntries(\n  Object.entries(DOCTOR_REMOTE).map(([k, v]) => [k, [v, HERO_REMOTE.doctor, HERO_REMOTE.home]])\n) as Record<string, string[]>;\n\nexport const GALLERY_REMOTE: string[] = [\n  \"https://images.unsplash.com/photo-1586773860414-9c5edc1f4a3f?auto=format&fit=crop&w=1200&q=80\",\n  \"https://images.unsplash.com/photo-1583912268181-52b068e3a2f3?auto=format&fit=crop&w=1200&q=80\",\n  \"https://images.unsplash.com/photo-1582719735998-2a636e7bf48e?auto=format&fit=crop&w=1200&q=80\",\n  \"https://images.unsplash.com/photo-1582719478461-905c673771fd?auto=format&fit=crop&w=1200&q=80\",\n  \"https://images.unsplash.com/photo-1584982753584-7d2c42b02968?auto=format&fit=crop&w=1200&q=80\",\n  \"https://images.unsplash.com/photo-1512069772995-ecf6ff09495a?auto=format&fit=crop&w=1200&q=80\",\n  \"https://images.unsplash.com/photo-1576765607924-b4f6d0fca32d?auto=format&fit=crop&w=1200&q=80\",\n  \"https://images.unsplash.com/photo-1526256262350-7da7584cf5eb?auto=format&fit=crop&w=1200&q=80\",\n  \"https://images.unsplash.com/photo-1584467735871-ec3abf7f1a8b?auto=format&fit=crop&w=1200&q=80\",\n  \"https://images.unsplash.com/photo-1584985235176-5f0f7d9f4d18?auto=format&fit=crop&w=1200&q=80\",\n  \"https://images.unsplash.com/photo-1582550884961-8ec8c9ac6b5b?auto=format&fit=crop&w=1200&q=80\",\n  \"https://images.unsplash.com/photo-1580281657579-47e2d6fd1f3b?auto=format&fit=crop&w=1200&q=80\",\n];\n","import crypto from 'node:crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};","import type {\n  SerializedEditorState,\n  SerializedLexicalNode,\n  SerializedParagraphNode,\n  SerializedTextNode,\n} from 'lexical'\n\nexport function hasText(\n  value: null | SerializedEditorState<SerializedLexicalNode> | undefined,\n): boolean {\n  const hasChildren = !!value?.root?.children?.length\n\n  let hasOnlyEmptyParagraph = false\n  if (value?.root?.children?.length === 1) {\n    if (value?.root?.children[0]?.type === 'paragraph') {\n      const paragraphNode = value?.root?.children[0] as SerializedParagraphNode\n\n      if (!paragraphNode?.children || paragraphNode?.children?.length === 0) {\n        hasOnlyEmptyParagraph = true\n      } else if (paragraphNode?.children?.length === 1) {\n        const paragraphNodeChild = paragraphNode?.children[0]\n        if (paragraphNodeChild?.type === 'text') {\n          if (!(paragraphNodeChild as SerializedTextNode | undefined)?.['text']?.length) {\n            hasOnlyEmptyParagraph = true\n          }\n        }\n      }\n    }\n  }\n\n  if (!hasChildren || hasOnlyEmptyParagraph) {\n    return false\n  } else {\n    return true\n  }\n}\n","import type { DefaultNodeTypes } from '../../../../nodeTypes.js'\nimport type { JSXConverters } from './types.js'\n\nimport { BlockquoteJSXConverter } from './converters/blockquote.js'\nimport { HeadingJSXConverter } from './converters/heading.js'\nimport { HorizontalRuleJSXConverter } from './converters/horizontalRule.js'\nimport { LinebreakJSXConverter } from './converters/linebreak.js'\nimport { LinkJSXConverter } from './converters/link.js'\nimport { ListJSXConverter } from './converters/list.js'\nimport { ParagraphJSXConverter } from './converters/paragraph.js'\nimport { TabJSXConverter } from './converters/tab.js'\nimport { TableJSXConverter } from './converters/table.js'\nimport { TextJSXConverter } from './converters/text.js'\nimport { UploadJSXConverter } from './converters/upload.js'\n\nexport const defaultJSXConverters: JSXConverters<DefaultNodeTypes> = {\n  ...ParagraphJSXConverter,\n  ...TextJSXConverter,\n  ...LinebreakJSXConverter,\n  ...BlockquoteJSXConverter,\n  ...TableJSXConverter,\n  ...HeadingJSXConverter,\n  ...HorizontalRuleJSXConverter,\n  ...ListJSXConverter,\n  ...LinkJSXConverter({}),\n  ...UploadJSXConverter,\n  ...TabJSXConverter,\n}\n","import type { SerializedTabNode } from '../../../../../nodeTypes.js'\nimport type { JSXConverters } from '../types.js'\n\nexport const TabJSXConverter: JSXConverters<SerializedTabNode> = {\n  tab: '\\t',\n}\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;","import crypto from 'node:crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import REGEX from './regex.js';\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;","import type { SerializedEditorState } from 'lexical'\n\nimport React from 'react'\n\nimport type {\n  DefaultNodeTypes,\n  SerializedBlockNode,\n  SerializedInlineBlockNode,\n} from '../../../../nodeTypes.js'\nimport type { JSXConverters } from '../converter/types.js'\n\nimport { defaultJSXConverters } from '../converter/defaultConverters.js'\nimport { convertLexicalToJSX } from '../converter/index.js'\n\nexport type JSXConvertersFunction<\n  T extends { [key: string]: any; type?: string } =\n    | DefaultNodeTypes\n    | SerializedBlockNode<{ blockName?: null | string }>\n    | SerializedInlineBlockNode<{ blockName?: null | string }>,\n> = (args: { defaultConverters: JSXConverters<DefaultNodeTypes> }) => JSXConverters<T>\n\ntype RichTextProps = {\n  /**\n   * Override class names for the container.\n   */\n  className?: string\n  /**\n   * Custom converters to transform your nodes to JSX. Can be an object or a function that receives the default converters.\n   */\n  converters?: JSXConverters | JSXConvertersFunction\n  /**\n   * Serialized editor state to render.\n   */\n  data: SerializedEditorState\n  /**\n   * If true, removes the container div wrapper.\n   */\n  disableContainer?: boolean\n  /**\n   * If true, disables indentation globally. If an array, disables for specific node `type` values.\n   */\n  disableIndent?: boolean | string[]\n  /**\n   * If true, disables text alignment globally. If an array, disables for specific node `type` values.\n   */\n  disableTextAlign?: boolean | string[]\n}\n\nexport const RichText: React.FC<RichTextProps> = ({\n  className,\n  converters,\n  data: editorState,\n  disableContainer,\n  disableIndent,\n  disableTextAlign,\n}) => {\n  if (!editorState) {\n    return null\n  }\n\n  let finalConverters: JSXConverters = {}\n  if (converters) {\n    if (typeof converters === 'function') {\n      finalConverters = converters({ defaultConverters: defaultJSXConverters })\n    } else {\n      finalConverters = converters\n    }\n  } else {\n    finalConverters = defaultJSXConverters\n  }\n\n  const content =\n    editorState &&\n    !Array.isArray(editorState) &&\n    typeof editorState === 'object' &&\n    'root' in editorState &&\n    convertLexicalToJSX({\n      converters: finalConverters,\n      data: editorState,\n      disableIndent,\n      disableTextAlign,\n    })\n\n  if (disableContainer) {\n    return <>{content}</>\n  }\n\n  return <div className={className ?? 'payload-richtext'}>{content}</div>\n}\n","import type { SerializedAutoLinkNode, SerializedLinkNode } from '../../../../../nodeTypes.js'\nimport type { JSXConverters } from '../types.js'\n\nexport const LinkJSXConverter: (args: {\n  internalDocToHref?: (args: { linkNode: SerializedLinkNode }) => string\n}) => JSXConverters<SerializedAutoLinkNode | SerializedLinkNode> = ({ internalDocToHref }) => ({\n  autolink: ({ node, nodesToJSX }) => {\n    const children = nodesToJSX({\n      nodes: node.children,\n    })\n\n    const rel: string | undefined = node.fields.newTab ? 'noopener noreferrer' : undefined\n    const target: string | undefined = node.fields.newTab ? '_blank' : undefined\n\n    return (\n      <a href={node.fields.url} {...{ rel, target }}>\n        {children}\n      </a>\n    )\n  },\n  link: ({ node, nodesToJSX }) => {\n    const children = nodesToJSX({\n      nodes: node.children,\n    })\n\n    const rel: string | undefined = node.fields.newTab ? 'noopener noreferrer' : undefined\n    const target: string | undefined = node.fields.newTab ? '_blank' : undefined\n\n    let href: string = node.fields.url ?? ''\n    if (node.fields.linkType === 'internal') {\n      if (internalDocToHref) {\n        href = internalDocToHref({ linkNode: node })\n      } else {\n        console.error(\n          'Lexical => JSX converter: Link converter: found internal link, but internalDocToHref is not provided',\n        )\n        href = '#' // fallback\n      }\n    }\n\n    return (\n      <a href={href} {...{ rel, target }}>\n        {children}\n      </a>\n    )\n  },\n})\n","import { v4 as uuidv4 } from 'uuid'\n\nimport type { SerializedListItemNode, SerializedListNode } from '../../../../../nodeTypes.js'\nimport type { JSXConverters } from '../types.js'\n\nexport const ListJSXConverter: JSXConverters<SerializedListItemNode | SerializedListNode> = {\n  list: ({ node, nodesToJSX }) => {\n    const children = nodesToJSX({\n      nodes: node.children,\n    })\n\n    const NodeTag = node.tag\n\n    return <NodeTag className={`list-${node?.listType}`}>{children}</NodeTag>\n  },\n  listitem: ({ node, nodesToJSX, parent }) => {\n    const hasSubLists = node.children.some((child) => child.type === 'list')\n\n    const children = nodesToJSX({\n      nodes: node.children,\n    })\n\n    if ('listType' in parent && parent?.listType === 'check') {\n      const uuid = uuidv4()\n\n      return (\n        <li\n          aria-checked={node.checked ? 'true' : 'false'}\n          className={`list-item-checkbox${node.checked ? ' list-item-checkbox-checked' : ' list-item-checkbox-unchecked'}${hasSubLists ? ' nestedListItem' : ''}`}\n          // eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role\n          role=\"checkbox\"\n          style={{ listStyleType: 'none' }}\n          tabIndex={-1}\n          value={node?.value}\n        >\n          {hasSubLists ? (\n            children\n          ) : (\n            <>\n              <input checked={node.checked} id={uuid} readOnly={true} type=\"checkbox\" />\n              <label htmlFor={uuid}>{children}</label>\n              <br />\n            </>\n          )}\n        </li>\n      )\n    } else {\n      return (\n        <li\n          className={`${hasSubLists ? 'nestedListItem' : ''}`}\n          style={hasSubLists ? { listStyleType: 'none' } : undefined}\n          value={node?.value}\n        >\n          {children}\n        </li>\n      )\n    }\n  },\n}\n","import type {\n  SerializedTableCellNode,\n  SerializedTableNode,\n  SerializedTableRowNode,\n} from '../../../../../nodeTypes.js'\nimport type { JSXConverters } from '../types.js'\n\nexport const TableJSXConverter: JSXConverters<\n  SerializedTableCellNode | SerializedTableNode | SerializedTableRowNode\n> = {\n  table: ({ node, nodesToJSX }) => {\n    const children = nodesToJSX({\n      nodes: node.children,\n    })\n    return (\n      <div className=\"lexical-table-container\">\n        <table className=\"lexical-table\" style={{ borderCollapse: 'collapse' }}>\n          <tbody>{children}</tbody>\n        </table>\n      </div>\n    )\n  },\n  tablecell: ({ node, nodesToJSX }) => {\n    const children = nodesToJSX({\n      nodes: node.children,\n    })\n\n    const TagName = node.headerState > 0 ? 'th' : 'td' // Use capital letter to denote a component\n    const headerStateClass = `lexical-table-cell-header-${node.headerState}`\n    const style = {\n      backgroundColor: node.backgroundColor || undefined, // Use undefined to avoid setting the style property if not needed\n      border: '1px solid #ccc',\n      padding: '8px',\n    }\n\n    // Note: JSX does not support setting attributes directly as strings, so you must convert the colSpan and rowSpan to numbers\n    const colSpan = node.colSpan && node.colSpan > 1 ? node.colSpan : undefined\n    const rowSpan = node.rowSpan && node.rowSpan > 1 ? node.rowSpan : undefined\n\n    return (\n      <TagName\n        className={`lexical-table-cell ${headerStateClass}`}\n        colSpan={colSpan} // colSpan and rowSpan will only be added if they are not null\n        rowSpan={rowSpan}\n        style={style}\n      >\n        {children}\n      </TagName>\n    )\n  },\n  tablerow: ({ node, nodesToJSX }) => {\n    const children = nodesToJSX({\n      nodes: node.children,\n    })\n    return <tr className=\"lexical-table-row\">{children}</tr>\n  },\n}\n","import type { SerializedQuoteNode } from '../../../../../nodeTypes.js'\nimport type { JSXConverters } from '../types.js'\n\nexport const BlockquoteJSXConverter: JSXConverters<SerializedQuoteNode> = {\n  quote: ({ node, nodesToJSX }) => {\n    const children = nodesToJSX({\n      nodes: node.children,\n    })\n\n    return <blockquote>{children}</blockquote>\n  },\n}\n","import type { SerializedHorizontalRuleNode } from '../../../../../nodeTypes.js'\nimport type { JSXConverters } from '../types.js'\nexport const HorizontalRuleJSXConverter: JSXConverters<SerializedHorizontalRuleNode> = {\n  horizontalrule: <hr />,\n}\n","import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","import type { SerializedHeadingNode } from '../../../../../nodeTypes.js'\nimport type { JSXConverters } from '../types.js'\n\nexport const HeadingJSXConverter: JSXConverters<SerializedHeadingNode> = {\n  heading: ({ node, nodesToJSX }) => {\n    const children = nodesToJSX({\n      nodes: node.children,\n    })\n\n    const NodeTag = node.tag\n\n    return <NodeTag>{children}</NodeTag>\n  },\n}\n","import type { SerializedLineBreakNode } from '../../../../../nodeTypes.js'\nimport type { JSXConverters } from '../types.js'\n\nexport const LinebreakJSXConverter: JSXConverters<SerializedLineBreakNode> = {\n  linebreak: <br />,\n}\n","import React from 'react'\n\nimport type { SerializedTextNode } from '../../../../../nodeTypes.js'\nimport type { JSXConverters } from '../types.js'\n\nimport { NodeFormat } from '../../../../../lexical/utils/nodeFormat.js'\n\nexport const TextJSXConverter: JSXConverters<SerializedTextNode> = {\n  text: ({ node }) => {\n    let text: React.ReactNode = node.text\n\n    if (node.format & NodeFormat.IS_BOLD) {\n      text = <strong>{text}</strong>\n    }\n    if (node.format & NodeFormat.IS_ITALIC) {\n      text = <em>{text}</em>\n    }\n    if (node.format & NodeFormat.IS_STRIKETHROUGH) {\n      text = <span style={{ textDecoration: 'line-through' }}>{text}</span>\n    }\n    if (node.format & NodeFormat.IS_UNDERLINE) {\n      text = <span style={{ textDecoration: 'underline' }}>{text}</span>\n    }\n    if (node.format & NodeFormat.IS_CODE) {\n      text = <code>{text}</code>\n    }\n    if (node.format & NodeFormat.IS_SUBSCRIPT) {\n      text = <sub>{text}</sub>\n    }\n    if (node.format & NodeFormat.IS_SUPERSCRIPT) {\n      text = <sup>{text}</sup>\n    }\n\n    return text\n  },\n}\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","/* eslint-disable no-console */\nimport type { SerializedEditorState, SerializedLexicalNode } from 'lexical'\n\nimport React from 'react'\n\nimport type { SerializedBlockNode, SerializedInlineBlockNode } from '../../../../nodeTypes.js'\nimport type { JSXConverter, JSXConverters, SerializedLexicalNodeWithParent } from './types.js'\n\nimport { hasText } from '../../../../validate/hasText.js'\n\nexport type ConvertLexicalToJSXArgs = {\n  converters: JSXConverters\n  data: SerializedEditorState\n  disableIndent?: boolean | string[]\n  disableTextAlign?: boolean | string[]\n}\n\nexport function convertLexicalToJSX({\n  converters,\n  data,\n  disableIndent,\n  disableTextAlign,\n}: ConvertLexicalToJSXArgs): React.ReactNode {\n  if (hasText(data)) {\n    return convertLexicalNodesToJSX({\n      converters,\n      disableIndent,\n      disableTextAlign,\n      nodes: data?.root?.children,\n      parent: data?.root,\n    })\n  }\n  return <></>\n}\n\nexport function convertLexicalNodesToJSX({\n  converters,\n  disableIndent,\n  disableTextAlign,\n  nodes,\n  parent,\n}: {\n  converters: JSXConverters\n  disableIndent?: boolean | string[]\n  disableTextAlign?: boolean | string[]\n  nodes: SerializedLexicalNode[]\n  parent: SerializedLexicalNodeWithParent\n}): React.ReactNode[] {\n  const unknownConverter: JSXConverter<any> = converters.unknown as JSXConverter<any>\n\n  const jsxArray: React.ReactNode[] = nodes.map((node, i) => {\n    let converterForNode: JSXConverter<any> | undefined\n    if (node.type === 'block') {\n      converterForNode = converters?.blocks?.[(node as SerializedBlockNode)?.fields?.blockType]\n      if (!converterForNode && !unknownConverter) {\n        console.error(\n          `Lexical => JSX converter: Blocks converter: found ${(node as SerializedBlockNode)?.fields?.blockType} block, but no converter is provided`,\n        )\n      }\n    } else if (node.type === 'inlineBlock') {\n      converterForNode =\n        converters?.inlineBlocks?.[(node as SerializedInlineBlockNode)?.fields?.blockType]\n      if (!converterForNode && !unknownConverter) {\n        console.error(\n          `Lexical => JSX converter: Inline Blocks converter: found ${(node as SerializedInlineBlockNode)?.fields?.blockType} inline block, but no converter is provided`,\n        )\n      }\n    } else {\n      converterForNode = converters[node.type] as JSXConverter<any>\n    }\n\n    try {\n      if (!converterForNode && unknownConverter) {\n        converterForNode = unknownConverter\n      }\n\n      let reactNode: React.ReactNode\n      if (converterForNode) {\n        const converted =\n          typeof converterForNode === 'function'\n            ? converterForNode({\n                childIndex: i,\n                converters,\n                node,\n                nodesToJSX: (args) => {\n                  return convertLexicalNodesToJSX({\n                    converters: args.converters ?? converters,\n                    disableIndent: args.disableIndent ?? disableIndent,\n                    disableTextAlign: args.disableTextAlign ?? disableTextAlign,\n                    nodes: args.nodes,\n                    parent: args.parent ?? {\n                      ...node,\n                      parent,\n                    },\n                  })\n                },\n                parent,\n              })\n            : converterForNode\n        reactNode = converted\n      } else {\n        reactNode = <span key={i}>unknown node</span>\n      }\n\n      const style: React.CSSProperties = {}\n\n      // Check if disableTextAlign is not true and does not include node type\n      if (\n        !disableTextAlign &&\n        (!Array.isArray(disableTextAlign) || !disableTextAlign?.includes(node.type))\n      ) {\n        if ('format' in node && node.format) {\n          switch (node.format) {\n            case 'center':\n              style.textAlign = 'center'\n              break\n            case 'end':\n              style.textAlign = 'right'\n              break\n            case 'justify':\n              style.textAlign = 'justify'\n              break\n            case 'left':\n              //style.textAlign = 'left'\n              // Do nothing, as left is the default\n              break\n            case 'right':\n              style.textAlign = 'right'\n              break\n            case 'start':\n              style.textAlign = 'left'\n              break\n          }\n        }\n      }\n\n      if (\n        !disableIndent &&\n        (!Array.isArray(disableIndent) || !disableIndent?.includes(node.type))\n      ) {\n        if ('indent' in node && node.indent && node.type !== 'listitem') {\n          // the unit should be px. Do not change it to rem, em, or something else.\n          // The quantity should be 40px. Do not change it either.\n          // See rationale in\n          // https://github.com/payloadcms/payload/issues/13130#issuecomment-3058348085\n          style.paddingInlineStart = `${Number(node.indent) * 40}px`\n        }\n      }\n\n      if (React.isValidElement(reactNode)) {\n        // Inject style into reactNode\n        if (style.textAlign || style.paddingInlineStart) {\n          const newStyle = {\n            ...style,\n            // @ts-expect-error type better later\n            ...(reactNode?.props?.style ?? {}),\n            // reactNode style comes after, thus a textAlign specified in the converter has priority over the one we inject here\n          }\n\n          return React.cloneElement(reactNode, {\n            key: i,\n            // @ts-expect-error type better later\n            style: newStyle,\n          })\n        }\n        return React.cloneElement(reactNode, {\n          key: i,\n        })\n      }\n\n      return reactNode\n    } catch (error) {\n      console.error('Error converting lexical node to JSX:', error, 'node:', node)\n      return null\n    }\n  })\n\n  return jsxArray.filter(Boolean)\n}\n","/* eslint-disable perfectionist/sort-objects */\n/* eslint-disable regexp/no-obscure-range */\n/* eslint-disable @typescript-eslint/no-redundant-type-constituents */\n/* eslint-disable regexp/no-misleading-unicode-character */\n//This copy-and-pasted from lexical here: https://github.com/facebook/lexical/blob/c2ceee223f46543d12c574e62155e619f9a18a5d/packages/lexical/src/LexicalConstants.ts\n\nimport type { ElementFormatType, TextFormatType, TextModeType } from 'lexical'\nexport type TextDetailType = 'directionless' | 'unmergable'\n\n// DOM\nexport const NodeFormat = {\n  DOM_ELEMENT_TYPE: 1,\n  DOM_TEXT_TYPE: 3,\n  // Reconciling\n  NO_DIRTY_NODES: 0,\n  HAS_DIRTY_NODES: 1,\n  FULL_RECONCILE: 2,\n  // Text node modes\n  IS_NORMAL: 0,\n  IS_TOKEN: 1,\n  IS_SEGMENTED: 2,\n  IS_INERT: 3,\n  // Text node formatting\n  IS_BOLD: 1,\n  IS_ITALIC: 1 << 1,\n  IS_STRIKETHROUGH: 1 << 2,\n  IS_UNDERLINE: 1 << 3,\n  IS_CODE: 1 << 4,\n  IS_SUBSCRIPT: 1 << 5,\n  IS_SUPERSCRIPT: 1 << 6,\n  IS_HIGHLIGHT: 1 << 7,\n  // Text node details\n  IS_DIRECTIONLESS: 1,\n  IS_UNMERGEABLE: 1 << 1,\n  // Element node formatting\n  IS_ALIGN_LEFT: 1,\n  IS_ALIGN_CENTER: 2,\n  IS_ALIGN_RIGHT: 3,\n  IS_ALIGN_JUSTIFY: 4,\n  IS_ALIGN_START: 5,\n  IS_ALIGN_END: 6,\n} as const\n\nexport const IS_ALL_FORMATTING =\n  NodeFormat.IS_BOLD |\n  NodeFormat.IS_ITALIC |\n  NodeFormat.IS_STRIKETHROUGH |\n  NodeFormat.IS_UNDERLINE |\n  NodeFormat.IS_CODE |\n  NodeFormat.IS_SUBSCRIPT |\n  NodeFormat.IS_SUPERSCRIPT |\n  NodeFormat.IS_HIGHLIGHT\n\n// Reconciliation\nexport const NON_BREAKING_SPACE = '\\u00A0'\n\nexport const DOUBLE_LINE_BREAK = '\\n\\n'\n\n// For FF, we need to use a non-breaking space, or it gets composition\n// in a stuck state.\n\nconst RTL = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst LTR =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n// eslint-disable-next-line no-misleading-character-class\nexport const RTL_REGEX = new RegExp('^[^' + LTR + ']*[' + RTL + ']')\n// eslint-disable-next-line no-misleading-character-class\nexport const LTR_REGEX = new RegExp('^[^' + RTL + ']*[' + LTR + ']')\n\nexport const TEXT_TYPE_TO_FORMAT: Record<string | TextFormatType, number> = {\n  bold: NodeFormat.IS_BOLD,\n  code: NodeFormat.IS_CODE,\n  highlight: NodeFormat.IS_HIGHLIGHT,\n  italic: NodeFormat.IS_ITALIC,\n  strikethrough: NodeFormat.IS_STRIKETHROUGH,\n  subscript: NodeFormat.IS_SUBSCRIPT,\n  superscript: NodeFormat.IS_SUPERSCRIPT,\n  underline: NodeFormat.IS_UNDERLINE,\n}\n\nexport const DETAIL_TYPE_TO_DETAIL: Record<string | TextDetailType, number> = {\n  directionless: NodeFormat.IS_DIRECTIONLESS,\n  unmergeable: NodeFormat.IS_UNMERGEABLE,\n}\n\nexport const ELEMENT_TYPE_TO_FORMAT: Record<Exclude<ElementFormatType, ''>, number> = {\n  center: NodeFormat.IS_ALIGN_CENTER,\n  end: NodeFormat.IS_ALIGN_END,\n  justify: NodeFormat.IS_ALIGN_JUSTIFY,\n  left: NodeFormat.IS_ALIGN_LEFT,\n  right: NodeFormat.IS_ALIGN_RIGHT,\n  start: NodeFormat.IS_ALIGN_START,\n}\n\nexport const ELEMENT_FORMAT_TO_TYPE: Record<number, ElementFormatType> = {\n  [NodeFormat.IS_ALIGN_CENTER]: 'center',\n  [NodeFormat.IS_ALIGN_END]: 'end',\n  [NodeFormat.IS_ALIGN_JUSTIFY]: 'justify',\n  [NodeFormat.IS_ALIGN_LEFT]: 'left',\n  [NodeFormat.IS_ALIGN_RIGHT]: 'right',\n  [NodeFormat.IS_ALIGN_START]: 'start',\n}\n\nexport const TEXT_MODE_TO_TYPE: Record<TextModeType, 0 | 1 | 2> = {\n  normal: NodeFormat.IS_NORMAL,\n  segmented: NodeFormat.IS_SEGMENTED,\n  token: NodeFormat.IS_TOKEN,\n}\n\nexport const TEXT_TYPE_TO_MODE: Record<number, TextModeType> = {\n  [NodeFormat.IS_NORMAL]: 'normal',\n  [NodeFormat.IS_SEGMENTED]: 'segmented',\n  [NodeFormat.IS_TOKEN]: 'token',\n}\n","import type { FileData, FileSizeImproved, TypeWithID } from 'payload'\n\nimport type { SerializedUploadNode } from '../../../../../nodeTypes.js'\nimport type { UploadDataImproved } from '../../../../upload/server/nodes/UploadNode.js'\nimport type { JSXConverters } from '../types.js'\n\nexport const UploadJSXConverter: JSXConverters<SerializedUploadNode> = {\n  upload: ({ node }) => {\n    // TO-DO (v4): SerializedUploadNode should use UploadData_P4\n    const uploadNode = node as UploadDataImproved\n    if (typeof uploadNode.value !== 'object') {\n      return null\n    }\n\n    const uploadDoc = uploadNode.value as FileData & TypeWithID\n\n    const url = uploadDoc.url\n\n    /**\n     * If the upload is not an image, return a link to the upload\n     */\n    if (!uploadDoc.mimeType.startsWith('image')) {\n      return (\n        <a href={url} rel=\"noopener noreferrer\">\n          {uploadDoc.filename}\n        </a>\n      )\n    }\n\n    /**\n     * If the upload is a simple image with no different sizes, return a simple img tag\n     */\n    if (!uploadDoc.sizes || !Object.keys(uploadDoc.sizes).length) {\n      return (\n        <img alt={uploadDoc.filename} height={uploadDoc.height} src={url} width={uploadDoc.width} />\n      )\n    }\n\n    /**\n     * If the upload is an image with different sizes, return a picture element\n     */\n    const pictureJSX: React.ReactNode[] = []\n\n    // Iterate through each size in the data.sizes object\n    for (const size in uploadDoc.sizes) {\n      const imageSize = uploadDoc.sizes[size] as FileSizeImproved\n\n      // Skip if any property of the size object is null\n      if (\n        !imageSize ||\n        !imageSize.width ||\n        !imageSize.height ||\n        !imageSize.mimeType ||\n        !imageSize.filesize ||\n        !imageSize.filename ||\n        !imageSize.url\n      ) {\n        continue\n      }\n      const imageSizeURL = imageSize?.url\n\n      pictureJSX.push(\n        <source\n          key={size}\n          media={`(max-width: ${imageSize.width}px)`}\n          srcSet={imageSizeURL}\n          type={imageSize.mimeType}\n        />,\n      )\n    }\n\n    // Add the default img tag\n    pictureJSX.push(\n      <img\n        alt={uploadDoc?.filename}\n        height={uploadDoc?.height}\n        key={'image'}\n        src={url}\n        width={uploadDoc?.width}\n      />,\n    )\n    return <picture>{pictureJSX}</picture>\n  },\n}\n","import type { SerializedParagraphNode } from '../../../../../nodeTypes.js'\nimport type { JSXConverters } from '../types.js'\n\nexport const ParagraphJSXConverter: JSXConverters<SerializedParagraphNode> = {\n  paragraph: ({ node, nodesToJSX }) => {\n    const children = nodesToJSX({\n      nodes: node.children,\n    })\n\n    if (!children?.length) {\n      return (\n        <p>\n          <br />\n        </p>\n      )\n    }\n\n    return <p>{children}</p>\n  },\n}\n","import React from \"react\";\n\nimport { RichText } from \"@payloadcms/richtext-lexical/react\";\nimport { SerializedEditorState } from \"@payloadcms/richtext-lexical/lexical\";\n\ntype Props = {\n  data: SerializedEditorState;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport default function RichTextRenderer(props: Props) {\n  const { className, data, ...rest } = props;\n\n  const adminBase = (process.env.ADMIN_API_ENDPOINT || \"\").replace(/\\/$/, \"\");\n\n  // Generic deep transform that preserves structure; we don't strictly type the Payload editor JSON shape here.\n  function transform<T>(value: T): T {\n    if (typeof value === \"string\") {\n      // Only prefix if it starts with /api/media and not already fully qualified with the admin base.\n      if (value.startsWith(\"/api/media\")) {\n        if (adminBase && !value.startsWith(adminBase)) {\n          return `${adminBase}${value}` as T;\n        }\n      }\n      return value;\n    }\n    if (Array.isArray(value))\n      return value.map((v) => transform(v)) as unknown as T;\n    if (value && typeof value === \"object\") {\n      const out: Record<string, unknown> = {};\n      for (const k of Object.keys(value as Record<string, unknown>)) {\n        out[k] = transform((value as Record<string, unknown>)[k]);\n      }\n      return out as unknown as T;\n    }\n    return value;\n  }\n\n  const normalized = transform<typeof data>(data);\n\n  const wrapperClass = className\n    ? `${className} richtext-content`\n    : \"richtext-content\";\n\n  return (\n    <div className={wrapperClass} {...rest}>\n      <RichText data={normalized} />\n    </div>\n  );\n}\n","import {\n  BLOG_REMOTE_CANDIDATES,\n  HERO_REMOTE_CANDIDATES,\n} from \"@/lib/remote-images\";\nimport type { SerializedEditorState } from \"@payloadcms/richtext-lexical/lexical\";\nimport type { Metadata } from \"next\";\nimport Link from \"next/link\";\nimport PageHero from \"../../components/page-hero\";\nimport { getBlog } from \"@/lib/api/queries\";\nimport RichTextRenderer from \"@/app/helpers/RichTextRenderer\";\n// Breadcrumb removed: auto breadcrumb handles this at layout level\n\ntype BlogPostItem = {\n  slug: string;\n  title: string;\n  id: string;\n  excerpt: string;\n  // Minimal shape for Lexical JSON; allow index signature for flexibility\n  // Avoids using 'any' while keeping renderer compatibility\n  content: SerializedEditorState | null;\n  publishedAt: string;\n  author: {\n    name: string;\n    photo: { url: string } | null;\n    role: string | null;\n  };\n  coverImage: { url: string } | null;\n  tags: { value: string }[];\n};\n\nlet post: BlogPostItem | null = null;\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: Promise<{ slug: string }> | { slug: string };\n}): Promise<Metadata> {\n  const isThenable = (value: unknown): value is Promise<{ slug: string }> =>\n    typeof value === \"object\" && value !== null && \"then\" in value;\n  const resolved = isThenable(params)\n    ? await params\n    : (params as { slug: string });\n  const { slug } = resolved;\n  // Removed debug log\n\n  const loadedData = (await getBlog(`${slug}`)) as {\n    BlogPosts: {\n      docs: BlogPostItem[];\n    };\n  };\n  post = loadedData.BlogPosts.docs[0];\n\n  if (!post) return { title: \"Blog Post\" };\n  return {\n    title: post.title,\n  };\n}\n\nexport default async function BlogPost({\n  params,\n}: {\n  params: Promise<{ slug: string }> | { slug: string };\n}) {\n  const isThenable = (value: unknown): value is Promise<{ slug: string }> =>\n    typeof value === \"object\" && value !== null && \"then\" in value;\n  const resolved = isThenable(params)\n    ? await params\n    : (params as { slug: string });\n  const { slug } = resolved;\n\n  await generateMetadata({ params });\n\n  if (!post) {\n    return (\n      <div className=\"mx-auto max-w-6xl px-4 py-12\">\n        <h1 className=\"text-2xl font-semibold\">Post not found</h1>\n        <Link\n          href=\"/blogs\"\n          className=\"underline underline-offset-4 mt-4 inline-block\"\n        >\n          Back to blogs\n        </Link>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <PageHero\n        title={post.title}\n        subtitle={\n          post.author.name || post.publishedAt\n            ? `${post.author.name ?? \"\"}${\n                post.publishedAt\n                  ? ` • ${new Date(post.publishedAt).toLocaleDateString()}`\n                  : \"\"\n              }`\n            : undefined\n        }\n        imageSrc={`${process.env.ADMIN_API_ENDPOINT}/${post.coverImage?.url}`}\n        imageFallbackRemotes={(\n          BLOG_REMOTE_CANDIDATES[slug] ?? HERO_REMOTE_CANDIDATES.blogs\n        ).slice(1)}\n        imageFallbackSrc=\"/heroes/blogs.svg\"\n        imageAlt=\"Blog hero\"\n      />\n      <div className=\"mx-auto max-w-3xl px-4 py-12\">\n        <div className=\"prose max-w-none mt-6\">\n          {post.content ? (\n            <RichTextRenderer className=\" font-garamond\" data={post.content} />\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["getRevalidateReason","params","isOnDemandRevalidate","isRevalidate","undefined","CACHE_ONE_YEAR","getCacheControlHeader","revalidate","expire","swrHeader","BlockquoteJSXConverter","TabJSXConverter","hasText","value","tab","hasChildren","length","hasOnlyEmptyParagraph","heading","_jsx","convertLexicalToJSX","children","RichText","root","type","paragraphNode","uploadNode","node","data","text","nodesToJSX","nodes","IS_BOLD","IS_NORMAL","UploadJSXConverter","paragraphNodeChild","tag","NodeTag","converters","fields","url","newTab","ParagraphJSXConverter","editorState","className","target","TextJSXConverter","LinebreakJSXConverter","borderCollapse","mimeType","startsWith","TableJSXConverter","listitem","HeadingJSXConverter","HorizontalRuleJSXConverter","rel","_Fragment","IS_STRIKETHROUGH","ListJSXConverter","uploadDoc","filename","LinkJSXConverter","some","child","finalConverters","tablecell","defaultJSXConverters","Object","parent","keys","sizes","IS_UNDERLINE","content","Array","unknown","height","IS_ALIGN_RIGHT","headerState","checked","hasSubLists","IS_ALIGN_JUSTIFY","disableIndent","width","IS_ALIGN_START","blocks","blockType","IS_ALIGN_END","style","converterForNode","unknownConverter","console","error","backgroundColor","format","IS_CODE","NodeFormat","IS_ITALIC","IS_SUBSCRIPT","IS_SUPERSCRIPT","IS_HIGHLIGHT","tabIndex","pictureJSX","inlineBlocks","href","DOUBLE_LINE_BREAK","_jsxs","colSpan","size","rowSpan","uuid","TagName","imageSize","readOnly","headerStateClass","filesize","RegExp","LTR","RTL","LTR_REGEX","push","media","TEXT_TYPE_TO_FORMAT","bold","reactNode","imageSizeURL","code","tablerow","highlight","converted","italic","i","subscript","superscript","underline","convertLexicalNodesToJSX","src","args","directionless","disableTextAlign","IS_DIRECTIONLESS","unmergeable","ELEMENT_TYPE_TO_FORMAT","IS_ALIGN_CENTER","end","justify","left","IS_ALIGN_LEFT","right","start","isArray","includes","TEXT_MODE_TO_TYPE","normal","segmented","IS_SEGMENTED","token","textAlign","TEXT_TYPE_TO_MODE","IS_TOKEN","indent","paddingInlineStart","Number","React","isValidElement","newStyle","props","cloneElement","key","jsxArray","filter","Boolean"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]}